/*
 * This file is generated by jOOQ.
*/
package de.fhro.inf.sa.jerichoDemo.persistence.generated.tables.records;


import de.fhro.inf.sa.jerichoDemo.persistence.generated.tables.Jokes;
import de.fhro.inf.sa.jerichoDemo.persistence.generated.tables.interfaces.IJokes;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JokesRecord extends UpdatableRecordImpl<JokesRecord> implements Record3<Integer, String, Integer>, IJokes {

    private static final long serialVersionUID = 2092591231;

    /**
     * Setter for <code>public.jokes.id</code>.
     */
    @Override
    public JokesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.jokes.id</code>.
     */
    @Override
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.jokes.joke</code>.
     */
    @Override
    public JokesRecord setJoke(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.jokes.joke</code>.
     */
    @Override
    public String getJoke() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.jokes.categoryId</code>.
     */
    @Override
    public JokesRecord setCategoryid(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.jokes.categoryId</code>.
     */
    @Override
    public Integer getCategoryid() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Jokes.JOKES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Jokes.JOKES.JOKE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Jokes.JOKES.CATEGORYID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getJoke();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCategoryid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getJoke();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCategoryid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JokesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JokesRecord value2(String value) {
        setJoke(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JokesRecord value3(Integer value) {
        setCategoryid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JokesRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(IJokes from) {
        setId(from.getId());
        setJoke(from.getJoke());
        setCategoryid(from.getCategoryid());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends IJokes> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JokesRecord
     */
    public JokesRecord() {
        super(Jokes.JOKES);
    }

    /**
     * Create a detached, initialised JokesRecord
     */
    public JokesRecord(Integer id, String joke, Integer categoryid) {
        super(Jokes.JOKES);

        set(0, id);
        set(1, joke);
        set(2, categoryid);
    }
}
